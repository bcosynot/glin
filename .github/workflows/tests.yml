name: tests

on:
  pull_request:
    branches: ["*"]
  push:
    branches: ["main"]

permissions:
  contents: read

jobs:
  pytest:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true

      - name: Install dependencies
        run: |
          uv sync --group dev

      - name: Run tests with coverage
        run: |
          uv run pytest

      - name: Upload coverage artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml
          if-no-files-found: warn

      - name: Add coverage summary to job summary
        if: always()
        run: |
          if [ -f coverage.xml ]; then
            uv run python - <<'PY'
            import xml.etree.ElementTree as ET
            root = ET.parse('coverage.xml').getroot()
            # Cobertura format total metrics
            metrics = root.find('.//coverage') or root
            lines_valid = int(metrics.attrib.get('lines-valid') or metrics.attrib.get('linesValid') or 0)
            lines_covered = int(metrics.attrib.get('lines-covered') or metrics.attrib.get('linesCovered') or 0)
            percent = (lines_covered / lines_valid * 100) if lines_valid else 0.0
            print(f"### Coverage Summary\n\nLines covered: {lines_covered}/{lines_valid} ({percent:.1f}%)")
            PY
          fi
